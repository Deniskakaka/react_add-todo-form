{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","user","className","href","TodoInfo","todo","ClassNames","TodoList","todos","map","el","App","useState","setTitle","setUser","usersFromServer","users","todosFromServer","setTodos","errorUser","errorTitle","errorObject","setErrorobject","onSubmit","event","preventDefault","type","value","placeholder","onChange","target","disabled","index","onClick","comment","selectUser","filter","sort","a","b","addElement","result","forEach","push","renderListTodoWithUser","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9bf5d1b3.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import { User } from '../../types/User';\n\ntype Props = {\n  user: User\n};\n\nexport const UserInfo:React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","import ClassNames from 'classnames';\nimport { TodoWithUser } from '../../types/TodoWithUser';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: TodoWithUser\n};\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  return (\n    <article\n      data-id={todo.id}\n      className={ClassNames('TodoInfo', {\n        'TodoInfo--completed': todo.completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      <UserInfo user={todo.user} />\n    </article>\n  );\n};\n","import { TodoWithUser } from '../../types/TodoWithUser';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: TodoWithUser[]\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {\n        todos.map((el: TodoWithUser) => <TodoInfo todo={el} key={el.id} />)\n      }\n    </section>\n  );\n};\n","import { useState } from 'react';\nimport { User } from './types/User';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { Todo } from './types/Todo';\nimport { TodoWithUser } from './types/TodoWithUser';\nimport { TodoList } from './components/TodoList';\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [user, setUser] = useState(0);\n  const [users] = useState([...usersFromServer]);\n  const [todos, setTodos] = useState([...todosFromServer]);\n  const [errorObject, setErrorobject] = useState(\n    { errorUser: true, errorTitle: true },\n  );\n\n  const renderListTodoWithUser = () => {\n    const result: TodoWithUser[] = [];\n\n    todos.forEach((todo: Todo) => {\n      const selectUser = users\n        .filter((el: User) => el.id === todo.userId)[0];\n\n      if (selectUser) {\n        result.push({\n          ...todo,\n          user: selectUser,\n        });\n      }\n    });\n\n    return result;\n  };\n\n  const addElement = (comment: string, userId: number) => {\n    const selectUser = users.filter((el: User) => el.id === userId)[0].id;\n\n    setTodos([\n      ...todos,\n      {\n        id: todos.sort((a, b) => b.id - a.id)[0].id + 1,\n        title: comment,\n        completed: false,\n        userId: selectUser,\n      }]);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form onSubmit={(event) => event.preventDefault()}>\n        <div className=\"field\">\n          Title:\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            value={title}\n            placeholder=\"Enter a title\"\n            onChange={(event) => {\n              setErrorobject({ ...errorObject, errorTitle: true });\n              setTitle(event.target.value);\n            }}\n          />\n          {!errorObject.errorTitle\n            && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={user}\n            onChange={(event) => {\n              setErrorobject({ ...errorObject, errorUser: true });\n              setUser(+event.target.value);\n            }}\n          >\n            <option value=\"0\" disabled={user !== 0}>Choose a user</option>\n            {usersFromServer.map((el: User, index: number) => {\n              return <option value={index + 1} key={el.id}>{el.name}</option>;\n            })}\n          </select>\n\n          {!errorObject.errorUser\n            && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n          onClick={() => {\n            setErrorobject({ errorTitle: !!title, errorUser: !!user });\n\n            if (title && user) {\n              addElement(title, user);\n              setTitle('');\n              setUser(0);\n            }\n          }}\n        >\n          Add\n        </button>\n      </form>\n      <TodoList todos={renderListTodoWithUser()} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}